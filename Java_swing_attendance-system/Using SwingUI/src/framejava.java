
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author shubh
 */

public class framejava extends javax.swing.JFrame {

       int index;
       ButtonGroup group = new ButtonGroup();
       JComboBox comboBox = new JComboBox();
       JTabbedPane tabbedPane = new JTabbedPane();

       
       //tabbedPane.addChangeListener(new ChangeListener() {
         //@Override;
         private void stateChanged(ChangeEvent ce) {
            
            index=tabbedPane.getSelectedIndex();
            System.out.println(index);
                                                    }
        public framejava() 
    
    
    {
         initComponents();
        btstudentsubmit.setEnabled(true);
        btstudentupdate.setEnabled(false);
        btstudentdelete.setEnabled(false);

        btparentsubmit.setEnabled(true);
        btparentupdate.setEnabled(false);
        btparentdelete.setEnabled(false);

        btstaffsubmit.setEnabled(true);
        btstaffupdate.setEnabled(false);
        btstaffdelete.setEnabled(false);
   
        String filePath = "stud1.txt";
        File file= new File(filePath);
        try {
            BufferedReader fr = new BufferedReader(new FileReader(file));
            String[] columnName = new String[]{"STUDENT_SRN","STUDENT_NAME","ADDRESS","GENDER","EMAIL","PHONE","DEPARTMENT"};
            DefaultTableModel model = (DefaultTableModel)studtab.getModel();
            model.setColumnIdentifiers(columnName);
            Object[] tableLines;
            tableLines = fr.lines().toArray();
            //System.out.println(tablelines)
            for(int i=0;i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                
                String[] dataRow =line.split("\t");
                cbsrn1.addItem(dataRow[0]);
                model.addRow(dataRow);
                System.out.println(dataRow[0]);
            }
            
        } catch (FileNotFoundException ex)
        {
            Logger.getLogger(framejava.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        try
        {
            System.out.println("Printing parent table");
            File f = new File("stud2.txt");
            BufferedReader br = new BufferedReader(new FileReader(f));
            DefaultTableModel m = (DefaultTableModel)parenttab.getModel();
             Object[] tableLines = br.lines().toArray();
            for(int i=0;i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow =line.split("\t");
                //cbsrn1.addItem(dataRow[0]);
                m.addRow(dataRow);
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        
        try
        {
            System.out.println("Printing staff table");
            File f = new File("stud3.txt");
            BufferedReader br = new BufferedReader(new FileReader(f));
            DefaultTableModel m = (DefaultTableModel)stafftab.getModel();
             Object[] tableLines = br.lines().toArray();
            for(int i=0;i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow =line.split("\t");
                //cbsrn1.addItem(dataRow[0]);
                m.addRow(dataRow);
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        group.add(rb1);
        group.add(rb2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        stud_pane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfsrn = new javax.swing.JTextField();
        tfname = new javax.swing.JTextField();
        tfemail = new javax.swing.JTextField();
        tfphone = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfaddress = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        studtab = new javax.swing.JTable();
        btstudentsubmit = new javax.swing.JButton();
        btstudentupdate = new javax.swing.JButton();
        btstudentdelete = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        rb1 = new javax.swing.JRadioButton();
        rb2 = new javax.swing.JRadioButton();
        jLabel17 = new javax.swing.JLabel();
        cbdepartment = new javax.swing.JComboBox<String>();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cbsrn1 = new javax.swing.JComboBox<String>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfname1 = new javax.swing.JTextField();
        tfemail1 = new javax.swing.JTextField();
        tfoccupation = new javax.swing.JTextField();
        tfphone1 = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        parenttab = new javax.swing.JTable();
        btparentupdate = new javax.swing.JButton();
        btparentdelete = new javax.swing.JButton();
        btparentsubmit = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cbdepartment1 = new javax.swing.JComboBox<String>();
        jLabel15 = new javax.swing.JLabel();
        tfname2 = new javax.swing.JTextField();
        tfaddress2 = new javax.swing.JTextField();
        tfemail2 = new javax.swing.JTextField();
        tfphone2 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        stafftab = new javax.swing.JTable();
        btstaffsubmit = new javax.swing.JButton();
        btstaffupdate = new javax.swing.JButton();
        btstaffdelete = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jScrollPane4.setViewportView(jTree1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        stud_pane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stud_paneMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                stud_paneMouseEntered(evt);
            }
        });

        jLabel1.setText("SRN");

        jLabel2.setText("NAME");

        jLabel3.setText("ADDRESS");

        jLabel4.setText("EMAIL-ID");

        jLabel5.setText("PHONE_NUMBER:");

        tfsrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfsrnActionPerformed(evt);
            }
        });

        tfaddress.setColumns(20);
        tfaddress.setRows(5);
        jScrollPane1.setViewportView(tfaddress);

        studtab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STUDENT_SRN", "STUDENT_NAME", "ADDRESS", "GENDER", "EMAIL", "PHONE"
            }
        ));
        studtab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studtabMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(studtab);

        btstudentsubmit.setText("Submit");
        btstudentsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btstudentsubmitActionPerformed(evt);
            }
        });

        btstudentupdate.setText("Update");
        btstudentupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btstudentupdateActionPerformed(evt);
            }
        });

        btstudentdelete.setText("Delete");
        btstudentdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btstudentdeleteActionPerformed(evt);
            }
        });

        jLabel16.setText("GENDER");

        rb1.setText("MALE");

        rb2.setText("FEMALE");
        rb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb2ActionPerformed(evt);
            }
        });

        jLabel17.setText("DEPARTMENT");

        cbdepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COMPUTER", "MECHANICAL", "E&TC"}));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfsrn, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                                    .addComponent(tfname))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfemail, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btstudentsubmit)
                                .addGap(49, 49, 49)
                                .addComponent(btstudentupdate)
                                .addGap(57, 57, 57)
                                .addComponent(btstudentdelete))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbdepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfphone, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rb1)
                                        .addGap(18, 18, 18)
                                        .addComponent(rb2)))))
                        .addContainerGap(525, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(225, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(tfsrn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(rb1)
                    .addComponent(rb2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(cbdepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btstudentsubmit)
                    .addComponent(btstudentupdate)
                    .addComponent(btstudentdelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        stud_pane.addTab("STUDENT_TAB", jPanel1);

        jLabel6.setText("SRN");

        cbsrn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbsrn1ActionPerformed(evt);
            }
        });

        jLabel7.setText("NAME");

        jLabel8.setText("EMAIL-ID");

        jLabel9.setText("OCCUPATION");

        jLabel10.setText("MOBILE-NUMBER");

        tfname1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfname1ActionPerformed(evt);
            }
        });

        tfphone1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfphone1ActionPerformed(evt);
            }
        });

        parenttab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CHILD'S_SRN", "PARENT_NAME", "PARENT_EMAIL", "OCCUPATION", "MOBILE_NUMBER"
            }
        ));
        parenttab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parenttabMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(parenttab);

        btparentupdate.setText("Update");
        btparentupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btparentupdateActionPerformed(evt);
            }
        });

        btparentdelete.setText("Delete");
        btparentdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btparentdeleteActionPerformed(evt);
            }
        });

        btparentsubmit.setText("Submit");
        btparentsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btparentsubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cbsrn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfname1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfemail1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfoccupation, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tfphone1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btparentsubmit)
                        .addGap(56, 56, 56)
                        .addComponent(btparentupdate)
                        .addGap(57, 57, 57)
                        .addComponent(btparentdelete))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(181, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbsrn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfname1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfemail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tfoccupation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tfphone1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btparentupdate)
                    .addComponent(btparentdelete)
                    .addComponent(btparentsubmit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(277, 277, 277))
        );

        stud_pane.addTab("PARENT_TAB", jPanel2);

        jLabel11.setText("NAME");

        jLabel12.setText("ADDRESS");

        jLabel13.setText("EMAIL-ID");

        jLabel14.setText("MOBILE_NUMBER");

        cbdepartment1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COMPUTER", "MECHANICAL", "E&TC"}));

        jLabel15.setText("DEPARTMENT");

        tfemail2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfemail2ActionPerformed(evt);
            }
        });

        stafftab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STAFF_NAME", "ADDRESS", "STAFF_EMAIL", "STAFF_PHONE", "DEPARTMENT"
            }
        ));
        stafftab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stafftabMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(stafftab);

        btstaffsubmit.setText("Submit");
        btstaffsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btstaffsubmitActionPerformed(evt);
            }
        });

        btstaffupdate.setText("Update");
        btstaffupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btstaffupdateActionPerformed(evt);
            }
        });

        btstaffdelete.setText("Delete");
        btstaffdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btstaffdeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel14)
                                .addComponent(jLabel15))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbdepartment1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfphone2)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12)
                                .addComponent(jLabel11)
                                .addComponent(jLabel13))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfemail2, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                                .addComponent(tfname2)
                                .addComponent(tfaddress2))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btstaffsubmit)
                        .addGap(56, 56, 56)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btstaffupdate)
                                .addGap(63, 63, 63)
                                .addComponent(btstaffdelete)))))
                .addGap(89, 89, 89))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tfname2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(tfaddress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(tfemail2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(tfphone2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbdepartment1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btstaffsubmit)
                    .addComponent(btstaffupdate)
                    .addComponent(btstaffdelete))
                .addGap(58, 58, 58)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119))
        );

        stud_pane.addTab("STAFF_TAB", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stud_pane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stud_pane))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
      
       
    
       
       
        
         
       
        
    private void tfsrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfsrnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfsrnActionPerformed

    private void tfemail2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfemail2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfemail2ActionPerformed

    private void rb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rb2ActionPerformed

    private void btstaffupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btstaffupdateActionPerformed
        btstaffsubmit.setEnabled(true);
        btstaffupdate.setEnabled(false);
        btstaffdelete.setEnabled(false);try{
        DefaultTableModel model = (DefaultTableModel)stafftab.getModel();
        int selectedRowIndex=stafftab.getSelectedRow();
        
        String newName=tfname2.getText().toString();
        String newAddr=tfaddress2.getText().toString();
        String newMail=tfemail2.getText().toString();
        String newMobile=tfphone2.getText().toString();
        String newDepartment=cbdepartment1.getSelectedItem().toString();
       
       
        model.setValueAt(newName,selectedRowIndex,0);
        model.setValueAt(newAddr,selectedRowIndex,1);
        model.setValueAt(newMail,selectedRowIndex,2);
       
        model.setValueAt(newMobile,selectedRowIndex,3);
        model.setValueAt(newDepartment,selectedRowIndex,4);
        
            
            tfname2.setText("");
            tfaddress2.setText("");
            tfemail2.setText("");
            tfphone2.setText("");
            
            
        System.out.println(stafftab.getRowCount());
        FileWriter fw = new FileWriter("stud3.txt");
        
        for(int i=0; i<stafftab.getRowCount(); i++)
        {
            
            String name= model.getValueAt(i,0).toString();
            System.out.println(name);
            String addr=model.getValueAt(i,1).toString();
            System.out.println(addr);
            String mail=model.getValueAt(i,2).toString();
            
            String mobile= model.getValueAt(i,3).toString();
            String department= model.getValueAt(i,4).toString();
            try{
            
            fw.write(name);
            fw.write("\t");
            fw.write(addr);
            fw.write("\t");
            fw.write(mail);
            fw.write("\t");
            fw.write(mobile);
            fw.write("\t");
            fw.write(department);
            fw.write(System.getProperty("line.separator"));
            }
            catch(Exception e){
              e.printStackTrace();
                
            }
        }
        
        fw.close();
        JOptionPane.showMessageDialog(rootPane,"Succesfully Updated..");
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
            
        }
    }//GEN-LAST:event_btstaffupdateActionPerformed

    private void btstudentupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btstudentupdateActionPerformed
                                                       
        btstudentsubmit.setEnabled(true);
        btstudentupdate.setEnabled(false);
        btstudentdelete.setEnabled(false);   
             try{
        DefaultTableModel model = (DefaultTableModel)studtab.getModel();
        int selectedRowIndex=studtab.getSelectedRow();
        String newSRN=tfsrn.getText().toString();
        String newName=tfname.getText().toString();
        String newAddr=tfaddress.getText().toString();
        String newMail=tfemail.getText().toString();
        String newMobile=tfphone.getText().toString();
        String newDepartment=cbdepartment.getSelectedItem().toString();
        String newGender;
        
         if (rb1.isSelected()){
            newGender="Male";
        }
        else if(rb2.isSelected()){
            newGender="Female";
        }
        else{
           newGender="None"; 
        }
            
        model.setValueAt(newSRN,selectedRowIndex,0);
        model.setValueAt(newName,selectedRowIndex,1);
        model.setValueAt(newAddr,selectedRowIndex,2);
        model.setValueAt(newGender,selectedRowIndex,3);
        model.setValueAt(newMail,selectedRowIndex,4);
        model.setValueAt(newMobile,selectedRowIndex,5);
        model.setValueAt(newDepartment,selectedRowIndex,6);
        
            tfsrn.setText("");
            tfname.setText("");
            tfaddress.setText("");
            tfemail.setText("");
            tfphone.setText("");
            group.clearSelection();
            
        System.out.println(studtab.getRowCount());
        FileWriter fw = new FileWriter("stud1.txt");
        
        for(int i=0; i<studtab.getRowCount(); i++)
        {
            String srn=model.getValueAt(i,0).toString();
            String name= model.getValueAt(i,1).toString();
            System.out.println(name);
            String addr=model.getValueAt(i,2).toString();
            System.out.println(addr);
            String gender=model.getValueAt(i,3).toString();
            String mail=model.getValueAt(i,4).toString();
            String mobile= model.getValueAt(i,5).toString();
            String department= model.getValueAt(i,6).toString();
            try{
            fw.write(srn);
            fw.write("\t");
            fw.write(name);
            fw.write("\t");
            fw.write(addr);
            fw.write("\t");
            fw.write(mail);
            fw.write("\t");
            fw.write(gender);
            fw.write("\t");
            fw.write(mobile);
            fw.write("\t");
            fw.write(department);
            
            fw.write(System.getProperty("line.separator"));
            
            }
            catch(Exception e)
            {
                System.out.println(e);
                
            }
        }
        fw.close();
        
      //  JOptionPane.showMessageDialog(rootpane,"Succesfully Updated..");
        }catch(Exception ex)
        {
       System.out.println(ex);
            
        }
        
    }//GEN-LAST:event_btstudentupdateActionPerformed
    private void btparentupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btparentupdateActionPerformed
        btparentsubmit.setEnabled(true);
        btparentupdate.setEnabled(false);
        btparentdelete.setEnabled(false);        
        try{
        DefaultTableModel model = (DefaultTableModel)parenttab.getModel();
        int selectedRowIndex=parenttab.getSelectedRow();
        String newSRN=cbsrn1.getSelectedItem().toString();
        String newName=tfname1.getText();
        String newMail=tfemail1.getText();
        String newMobile=tfphone1.getText();
        String newOccupation=tfoccupation.getText();
        
       
        model.setValueAt(newSRN,selectedRowIndex,0);
        model.setValueAt(newName,selectedRowIndex,1);
        model.setValueAt(newMail,selectedRowIndex,2);
        model.setValueAt(newOccupation,selectedRowIndex,3);
        model.setValueAt(newMobile,selectedRowIndex,4);
        
        
            cbsrn1.setSelectedItem("");
            tfname1.setText("");
            tfemail1.setText("");
            tfphone1.setText("");
            tfoccupation.setText("");
            
            
        System.out.println(parenttab.getRowCount());
            try (FileWriter fw = new FileWriter("stud2.txt")) {
                for(int i=0; i<parenttab.getRowCount(); i++)
                {
                    String srn=model.getValueAt(i,0).toString();
                    String name= model.getValueAt(i,1).toString();
                    System.out.println(name);
                    String mail=model.getValueAt(i,2).toString();
                    String occupation=model.getValueAt(i,3).toString();
                    String mobile= model.getValueAt(i,4).toString();
                    
                    try{
                        fw.write(srn);
                        fw.write("\t");
                        fw.write(name);
                        fw.write("\t");
                        fw.write(mail);
                        fw.write("\t");
                        fw.write(occupation);
                        fw.write("\t");
                        fw.write(mobile);
                        fw.write(System.getProperty("line.separator"));
                        
                    }
                    catch(Exception e){
                        System.out.println(e);
                        
                    }
                }   }
        
        JOptionPane.showMessageDialog(rootPane,"Succesfully Updated..");
        }catch(IOException | HeadlessException ex){
            JOptionPane.showMessageDialog(null,ex);
            
        }
        
    }//GEN-LAST:event_btparentupdateActionPerformed

    private void tfphone1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfphone1ActionPerformed
      
    }//GEN-LAST:event_tfphone1ActionPerformed

    private void btstudentdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btstudentdeleteActionPerformed
        btstudentsubmit.setEnabled(true);
        btstudentupdate.setEnabled(false);
        btstudentdelete.setEnabled(false);        
String SRN,storeSRN=null;
String srn = null;
        try{
            DefaultTableModel model = (DefaultTableModel)studtab.getModel();
            int selectedRowIndex=studtab.getSelectedRow();
            storeSRN = model.getValueAt(selectedRowIndex,0).toString();
            SRN = model.getValueAt(selectedRowIndex,0).toString();
            
            
            System.out.println(SRN);
            model.removeRow(selectedRowIndex);
            FileWriter fw = new FileWriter("stud1.txt");
            tfsrn.setText("");
            tfname.setText("");
            tfaddress.setText("");
            tfemail.setText("");
            tfphone.setText("");
           // group.clearSelection();
            cbsrn1.removeAllItems();
            for(int i=0; i<studtab.getRowCount(); i++)
            {
                srn=model.getValueAt(i,0).toString();
                cbsrn1.addItem(srn);
                String name= model.getValueAt(i,1).toString();
                System.out.println(name);
                String addr=model.getValueAt(i,2).toString();
                System.out.println(addr);
                String mail=model.getValueAt(i,3).toString();
                String gender=model.getValueAt(i,4).toString();
                String mobile= model.getValueAt(i,5).toString();
                String department= model.getValueAt(i,6).toString();
                try{
                    fw.write(srn);
                    fw.write("\t");
                    fw.write(name);
                    fw.write("\t");
                    fw.write(addr);
                    fw.write("\t");
                    fw.write(mail);
                    fw.write("\t");
                    fw.write(gender);
                    fw.write("\t");
                    fw.write(mobile);
                    fw.write("\t");
                    fw.write(department);
                    
                    fw.write(System.getProperty("line.separator"));

                }
                catch(Exception e){
                 System.out.println(e);

                }
            }
            fw.close();

 
        
        String filePath = "stud1.txt";
        File file = new File(filePath);
        BufferedReader br = new BufferedReader(new FileReader(file));
        FileWriter fr = new FileWriter("temp.txt");
        String line;
        String[] record=null;
        int count=0;
        line=br.readLine();
        while(line!=null)
        {
            count++;
            record=line.split("\t");
            //System.out.println(record);
                if(record[0].equals(SRN))
                {
                   line=br.readLine();
                    continue;
                   
                }
                else
                {
                    fr.write(line);
                    fr.write(System.getProperty("line.separator"));
                    System.out.println("Yess");
                }
                
            line=br.readLine();
        }
        System.out.println(count);
        fr.close();
        br.close();
        
        File stud2 = new File("stud2.txt");
        File temp = new File("temp.txt");
        stud2.delete();
        boolean b=temp.renameTo(stud2);
        System.out.println(b);
        
        String filePath1 = "stud2.txt";
        File file1 = new File(filePath1);
        try {
            BufferedReader fb = new BufferedReader(new FileReader(file1));
            String[] columnName = new String[]{"CHILD'S_SRN","PARENT_NAME","PARENT_EMAIL","PARENT_OCCUPATION","MOBILE_NUMBER"};
            DefaultTableModel model_2 = (DefaultTableModel)parenttab.getModel();
            model_2.setRowCount(0);
            model_2.setColumnIdentifiers(columnName);
            Object[] tableLines;
            tableLines = fb.lines().toArray();
            for(int i=0;i < tableLines.length; i++)
            {
                String line1 = tableLines[i].toString().trim();
                String[] dataRow =line1.split("\t");
                model_2.addRow(dataRow);
            }
            fb.close();
         }catch (FileNotFoundException ex) {
            Logger.getLogger(framejava.class.getName()).log(Level.SEVERE, null, ex);
         }
       
                                  
       
        }
        catch(Exception ex){
           System.out.println(ex);
        }
          
       System.out.println("Still srn = "+srn);
       DeleteFromParent(storeSRN);
    }//GEN-LAST:event_btstudentdeleteActionPerformed

    private void btparentdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btparentdeleteActionPerformed
        btparentsubmit.setEnabled(true);
        btparentupdate.setEnabled(false);
        btparentdelete.setEnabled(false);        
try{
            DefaultTableModel model = (DefaultTableModel)parenttab.getModel();
            int selectedRowIndex=parenttab.getSelectedRow();
            model.removeRow(selectedRowIndex);
            FileWriter fw = new FileWriter("stud2.txt");
            
            cbsrn1.setSelectedItem("");
            //cbsrn1.removeAllItems();
            tfname1.setText("");
            tfemail1.setText("");
            tfphone1.setText("");
            tfoccupation.setText("");
            

            for(int i=0; i<parenttab.getRowCount(); i++)
            {
                String srn=model.getValueAt(i,0).toString();
                //cbsrn1.addItem(srn);
                String name= model.getValueAt(i,1).toString();
                System.out.println(name);
                //String addr=model.getValueAt(i,2).toString();
                //System.out.println(addr);
                String mail=model.getValueAt(i,2).toString();
                String occupation=model.getValueAt(i,3).toString();
                String mobile= model.getValueAt(i,4).toString();
                
                try{
                    fw.write(srn);
                    fw.write("\t");
                    fw.write(name);
                    fw.write("\t");
                    //fw.write(addr);
                    //fw.write("\t");
                    fw.write(mail);
                    fw.write("\t");
                    fw.write(occupation);
                    fw.write("\t");
                    fw.write(mobile);
                    
                    fw.write(System.getProperty("line.separator"));

                }
                catch(Exception e){
                    System.out.println(e);

                }
            }
            fw.close();

            JOptionPane.showMessageDialog(rootPane,"Succesfully Deleted..");
        }
        catch(IOException | HeadlessException ex){
            JOptionPane.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_btparentdeleteActionPerformed

    private void btstaffsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btstaffsubmitActionPerformed
        String name=tfname2.getText();
        String addr=tfaddress2.getText();
        String mail=tfemail2.getText();
        String mobile=tfphone2.getText();
        String department=cbdepartment1.getSelectedItem().toString();
        
        
        String filePath = "stud3.txt";
        File file= new File(filePath);
      
        try{
            try (FileWriter fw = new FileWriter("stud3.txt",true)) {
                fw.write(name);
                fw.write("\t");
                fw.write(addr);
                fw.write("\t");
                fw.write(mail);
                fw.write("\t");
                fw.write(mobile);
                fw.write("\t");
                fw.write(department);
                
                
                fw.write(System.getProperty("line.separator"));
            }
            
            tfname2.setText("");
            tfaddress2.setText("");
            tfemail2.setText("");
            tfphone2.setText("");
            
            
            String[] currRecord=new String[]{name,addr,mail,mobile,department};
            System.out.println(Arrays.toString(currRecord));
            
            DefaultTableModel model = (DefaultTableModel)stafftab.getModel();
            model.addRow(currRecord);
            
                    
            
           
           }
        catch (Exception e){
            
            System.out.println(e);        
        }
        
    }//GEN-LAST:event_btstaffsubmitActionPerformed

    private void btstaffdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btstaffdeleteActionPerformed
        btstaffsubmit.setEnabled(true);
        btstaffupdate.setEnabled(false);
        btstaffdelete.setEnabled(false);    
    try{
            DefaultTableModel model = (DefaultTableModel)stafftab.getModel();
            int selectedRowIndex=stafftab.getSelectedRow();
            model.removeRow(selectedRowIndex);
            try (FileWriter fw = new FileWriter("stud3.txt")) {
                tfname2.setText("");
                tfaddress2.setText("");
                tfemail2.setText("");
                tfphone2.setText("");
                
                

                
                for(int i=0; i<stafftab.getRowCount(); i++)
                {
                    
                    String name= model.getValueAt(i,0).toString();
                    System.out.println(name);
                    String addr=model.getValueAt(i,1).toString();
                    System.out.println(addr);
                    String mail=model.getValueAt(i,2).toString();
                    
                    String mobile= model.getValueAt(i,3).toString();
                    String department= model.getValueAt(i,4).toString();
                    
                    try{
                        
                        fw.write(name);
                        fw.write("\t");
                        fw.write(addr);
                        fw.write("\t");
                        fw.write(mail);
                        fw.write("\t");
                        fw.write(mobile);
                        fw.write("\t");
                        fw.write(department);
                        
                        
                        fw.write(System.getProperty("line.separator"));
                        
                    }
                    catch(Exception e){
                        System.out.println(e);
                        
                    }
                }
            }

            JOptionPane.showMessageDialog(rootPane,"Succesfully Deleted..");
        }
        catch(IOException | HeadlessException ex){
            JOptionPane.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_btstaffdeleteActionPerformed

    private void btstudentsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btstudentsubmitActionPerformed
        System.out.println(tfname.getText());
        System.out.println(tfaddress.getText());
        System.out.println(tfemail.getText());
        System.out.println(tfphone.getText());


        // Read File again to check SRN
        String srn=tfsrn.getText();
        // Check SRN
        int flag = 0;

        String filePath2 = "stud1.txt";
        String[] dataRow2 = {};
        File file2= new File(filePath2);
        try {
            BufferedReader fr2 = new BufferedReader(new FileReader(file2));
          //  String[] columnName = new String[]{"STUDENT_SRN","STUDENT_NAME","ADDRESS","GENDER","EMAIL","PHONE","DEPARTMENT"};
           // DefaultTableModel model = (DefaultTableModel)studtab.getModel();
           // model.setColumnIdentifiers(columnName);
            Object[] tableLines;
            tableLines = fr2.lines().toArray();
            //System.out.println(tablelines)
            for(int i=0;i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                
                dataRow2 =line.split("\t");
                if(dataRow2[0].equals(srn))
                    flag = 1;
                System.out.println(dataRow2[0]+ srn +" "+flag);
            }
            
        } catch (FileNotFoundException ex)
        {
            Logger.getLogger(framejava.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        
        
        if(flag == 1)
            JOptionPane.showMessageDialog(rootPane,"Duplicate Record");
        if(flag == 0)
            cbsrn1.addItem(srn);
        String name=tfname.getText();
        String addr=tfaddress.getText();
        String mail=tfemail.getText();
        String mobile=tfphone.getText();
        String department=cbdepartment.getSelectedItem().toString();
        System.out.println(department);
        String gender;
        if (rb1.isSelected()){
            gender="Male";
        }
        else if(rb2.isSelected()){
            gender="Female";
        }
        else{
            gender="None";
        }
        
        if(flag == 0)
        {
        String filePath = "stud1.txt";
        File file= new File(filePath);
      
        try{
            try (FileWriter fw = new FileWriter("stud1.txt",true)) {
                fw.write(srn);
                fw.write("\t");
                fw.write(name);
                fw.write("\t");
                fw.write(addr);
                fw.write("\t");
                fw.write(mail);
                fw.write("\t");
                fw.write(gender);
                fw.write("\t");
                fw.write(mobile);
                fw.write("\t");
                fw.write(department);
                
                
                fw.write(System.getProperty("line.separator"));
            }
            tfsrn.setText("");
            tfname.setText("");
            tfaddress.setText("");
            tfemail.setText("");
            tfphone.setText("");
            group.clearSelection();
            
            String[] currRecord=new String[]{srn,name,addr,mail,gender,mobile,department};
            System.out.println(Arrays.toString(currRecord));
            DefaultTableModel model = (DefaultTableModel)studtab.getModel();
            model.addRow(currRecord);
           
            
             
           }
        catch (Exception e)
        {
            
            System.out.println(e);        
        }
        }
           
    }//GEN-LAST:event_btstudentsubmitActionPerformed

    private void stud_paneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stud_paneMouseClicked
  
    }//GEN-LAST:event_stud_paneMouseClicked

    private void stud_paneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stud_paneMouseEntered

    }//GEN-LAST:event_stud_paneMouseEntered

    private void cbsrn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbsrn1ActionPerformed
 
    }//GEN-LAST:event_cbsrn1ActionPerformed

    private void studtabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studtabMouseClicked
        btstudentsubmit.setEnabled(false);
        btstudentupdate.setEnabled(true);
        btstudentdelete.setEnabled(true);
        
        DefaultTableModel t = (DefaultTableModel) studtab.getModel();
	JTable source = (JTable)evt.getSource();
	int row = source.rowAtPoint(evt.getPoint());
        
        
        tfsrn.setText(t.getValueAt(row, 0).toString());
        tfname.setText(t.getValueAt(row, 1).toString());
        tfaddress.setText(t.getValueAt(row, 2).toString());
        tfemail.setText(t.getValueAt(row, 3).toString());
        tfphone.setText(t.getValueAt(row, 4).toString());
        cbdepartment.setSelectedItem(t.getValueAt(row, 5).toString());                    
                
    }//GEN-LAST:event_studtabMouseClicked

    private void parenttabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parenttabMouseClicked
       //Disable submit button
       btparentsubmit.setEnabled(false);
       btparentupdate.setEnabled(true);
       btparentdelete.setEnabled(true);
        
       DefaultTableModel t = (DefaultTableModel) parenttab.getModel();
       JTable source = (JTable)evt.getSource();
       int row = source.rowAtPoint(evt.getPoint());
       
       
        cbsrn1.setSelectedItem(t.getValueAt(row, 0).toString());
        tfname1.setText(t.getValueAt(row, 1).toString());
        tfemail1.setText(t.getValueAt(row, 2).toString());
        tfoccupation.setText(t.getValueAt(row, 3).toString());
        tfphone1.setText(t.getValueAt(row, 4).toString());
    }//GEN-LAST:event_parenttabMouseClicked

    private void stafftabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stafftabMouseClicked
        //disable submit and enable update and delete
        btstaffsubmit.setEnabled(false);
        btstaffupdate.setEnabled(true);
        btstaffdelete.setEnabled(true);
        
        DefaultTableModel t = (DefaultTableModel) stafftab.getModel();
        JTable source = (JTable)evt.getSource();
        int row = source.rowAtPoint(evt.getPoint());
        
        tfname2.setText(t.getValueAt(row, 0).toString());
        tfaddress2.setText(t.getValueAt(row, 1).toString());
        tfemail2.setText(t.getValueAt(row, 2).toString());
        tfphone2.setText(t.getValueAt(row, 3).toString());
        cbdepartment1.setSelectedItem(t.getValueAt(row, 4));
        
    }//GEN-LAST:event_stafftabMouseClicked

    
    
    private void tfname1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfname1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfname1ActionPerformed

    private void btparentsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btparentsubmitActionPerformed
         System.out.println(cbsrn1.getSelectedItem());
        System.out.println(tfname1.getText());
        System.out.println(tfemail1.getText());
        System.out.println(tfoccupation.getText());
        System.out.println(tfphone1.getText());
        
        String srn=cbsrn1.getSelectedItem().toString();
        String name=tfname1.getText();
       // String addr=tfaddress.getText().toString();
        String mail=tfemail1.getText();
        String occupation =tfoccupation.getText();
        String mobile=tfphone1.getText();
       // String department=cbdepartment.getSelectedItem().toString();
       // System.out.println(department);
        
        
        String filePath = "stud2.txt";
        File file= new File(filePath);
      
        try{
             try (FileWriter fw = new FileWriter("stud2.txt",true)) {
                 fw.write(srn);
                 fw.write("\t");
                 fw.write(name);
                 fw.write("\t");
                 fw.write(mail);
                 fw.write("\t");
                 fw.write(occupation);
                 fw.write("\t");
                 fw.write(mobile);
                 
                 
                 
                 fw.write(System.getProperty("line.separator"));
             }
            cbsrn1.setSelectedItem("");
            tfname1.setText("");
            tfemail1.setText("");
            tfphone1.setText("");
            tfoccupation.setText("");
            
            String[] currRecord=new String[]{srn,name,mail,occupation,mobile};
            System.out.println(currRecord);
            DefaultTableModel model = (DefaultTableModel)parenttab.getModel();
            model.addRow(currRecord);
           
            
             
           }
        catch (Exception e)
        {
            
            System.out.println(e);        
        }
           
    }//GEN-LAST:event_btparentsubmitActionPerformed

       public  void DeleteFromParent(String key)
       {
           String srn;
           int i;
           
           System.out.println("SRN to be found is "+key);
           //Search the srn from
           DefaultTableModel m = (DefaultTableModel) parenttab.getModel();
           
           for( i = 0; i<parenttab.getRowCount();i++)
           {
               srn = m.getValueAt(i, 0).toString();
               System.out.println("Current srn = "+srn);
               if(key.equals(srn))
               {
                   System.out.println("Yes i fond the key at "+i);
                   break;
               }
           }
           if(i==parenttab.getRowCount())
           {
               System.out.println("Unfortunately i didn't found the key");
           }
           else
           {
               //Now since we have found the srn in parent, we will delete from 
               //parenttab and then write to the file
               System.out.println("Record to remove from file is "+i);
               
               //Remove record from parent tab
               m.removeRow(i);
               
               //After removing row from table rewrite the whole parenttab to stud2.txt
               try
               {
                   FileWriter fw = new FileWriter("stud2.txt");
                   for(i=0; i<parenttab.getRowCount(); i++)
                    {
                        srn=m.getValueAt(i,0).toString();
                        //cbsrn1.addItem(srn);
                        String name= m.getValueAt(i,1).toString();
                        System.out.println(name);
                        //String addr=model.getValueAt(i,2).toString();
                        //System.out.println(addr);
                        String mail=m.getValueAt(i,2).toString();
                        String occupation=m.getValueAt(i,3).toString();
                        String mobile= m.getValueAt(i,4).toString();
                
                try{
                    fw.write(srn);
                    fw.write("\t");
                    fw.write(name);
                    fw.write("\t");
                    //fw.write(addr);
                    //fw.write("\t");
                    fw.write(mail);
                    fw.write("\t");
                    fw.write(occupation);
                    fw.write("\t");
                    fw.write(mobile);
                    
                    fw.write(System.getProperty("line.separator"));

                }
                catch(Exception e){
                    System.out.println(e);

                }
            }
                   fw.close();
               }
               catch(Exception e)
               {
                   e.printStackTrace();
               }
           }
       }

    public static void main(String args[]) {
       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new framejava().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btparentdelete;
    private javax.swing.JButton btparentsubmit;
    private javax.swing.JButton btparentupdate;
    private javax.swing.JButton btstaffdelete;
    private javax.swing.JButton btstaffsubmit;
    private javax.swing.JButton btstaffupdate;
    private javax.swing.JButton btstudentdelete;
    private javax.swing.JButton btstudentsubmit;
    private javax.swing.JButton btstudentupdate;
    private javax.swing.JComboBox<String> cbdepartment;
    private javax.swing.JComboBox<String> cbdepartment1;
    private javax.swing.JComboBox<String> cbsrn1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTree jTree1;
    private javax.swing.JTable parenttab;
    private javax.swing.JRadioButton rb1;
    private javax.swing.JRadioButton rb2;
    private javax.swing.JTable stafftab;
    private javax.swing.JTabbedPane stud_pane;
    private javax.swing.JTable studtab;
    private javax.swing.JTextArea tfaddress;
    private javax.swing.JTextField tfaddress2;
    private javax.swing.JTextField tfemail;
    private javax.swing.JTextField tfemail1;
    private javax.swing.JTextField tfemail2;
    private javax.swing.JTextField tfname;
    private javax.swing.JTextField tfname1;
    private javax.swing.JTextField tfname2;
    private javax.swing.JTextField tfoccupation;
    private javax.swing.JTextField tfphone;
    private javax.swing.JTextField tfphone1;
    private javax.swing.JTextField tfphone2;
    private javax.swing.JTextField tfsrn;
    // End of variables declaration//GEN-END:variables
}
